import{_ as l,r as i,o as r,c as o,d as s,b as n,a as e,e as t}from"./app-1lTnJ-Z-.js";const d={},c=s("h1",{id:"linux",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#linux","aria-hidden":"true"},"#"),n(" Linux")],-1),p=s("h2",{id:"安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),n(" 安装")],-1),u=s("p",null,"首先我们需要一个VMware，在官网进行下载安装即可",-1),m={href:"https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.itmemo.cn/html/1204.html",target:"_blank",rel:"noopener noreferrer"},b=s("li",null,"安装完成后检查虚拟网卡是否安装成功，在系统设置->网络和Internet->更改适配器选项，可以看到VMnet1和VMnet8即可。",-1),h=s("p",null,"我们可以在下面的镜像网站内下载我们的操作系统Centos7",-1),k={href:"https://developer.aliyun.com/mirror/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://mirrors.tuna.tsinghua.edu.cn/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://mirrors.cloud.tencent.com/",target:"_blank",rel:"noopener noreferrer"},y=t("<li><p>进入到VMware创建一个虚拟机，开始Centos7的安装，这时我们可以选择典型或者自定义都可以，他们两个的区别是典型会直接选择镜像文件进行安装而自定义我们可以创建一个空的虚拟机然后再安装系统</p><ul><li>典型: 选择我们下载的镜像文件进行系统的安装，然后设置我们的用户名密码(这里不设置root，后期会配置)，选择安装位置空间大小(推荐的即可，20G不会直接分配20G空间，会随着使用一点点增大)，可以根据自己电脑自定义硬件的配置，后面自动安装即可</li><li>自定义(推荐): <ul><li>我们选择稍后安装操作系统创建一个空的虚拟机，选择我们要安装的操作系统和版本以及安装位置</li><li>自定义硬件配置，网络类型选择NAT，后面的使用推荐配置即可</li><li>分配磁盘大小，这里我们不勾选立即分配，就不会直接分配20G的磁盘空间，选择拆分多个文件</li><li>后面默认即可，点击完成，一个空的虚拟机创建完成，下面开始安装操作系统</li><li>点击我们的虚拟机右键设置，在CD/DVD 选择我们下载的CentOS7的镜像文件</li><li>点击开启虚拟机 开始 Install CentOS7</li><li>选择中文 亚洲上海时区</li><li>软件选择GNOME，带有图形界面模式的Linux 然后点击完成 <ul><li><strong>当前为了学习安装带图形化界面，后续只需要“最小安装”即可</strong> 最小安装只会有一个命令窗口没有图形化界面，后期我们会使用远程连接，后面可以考虑最小安装，不过会缺少一些依赖需要我们自己下载</li></ul></li><li>等待安装源和软件选择的检查，设置安装位置</li><li>关闭KDUMP</li><li>进入网络和主机名 打开以太网开关</li><li>设置超级管理员的密码 等待进度条走完 重启</li><li>第一次进入需要我们设置一个用户信息这里绝不可以使用root，自己创建一个</li><li>进入系统之后点击右上角的关机按钮选择注销，在登录界面选择未列出以超级管理员root的身份登录即可</li><li>如果需要关机，一定要先将虚拟机关机或者挂起后，再关闭VMware，然后关闭windows</li></ul></li></ul></li>",1),f=s("h2",{id:"远程工具使用",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#远程工具使用","aria-hidden":"true"},"#"),n(" 远程工具使用")],-1),w={href:"https://github.com/kingToolbox/WindTerm",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/kingToolbox/WindTerm/releases",target:"_blank",rel:"noopener noreferrer"},_={href:"https://kingtoolbox.github.io/",target:"_blank",rel:"noopener noreferrer"},E=t(`<p>打开软件之后选择新建会话, 使用SSH的连接形式，输入虚拟机的ip Linux的端口号默认为22</p><ul><li>虚拟机ip获取 -&gt; 在虚拟机终端输入<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在 <code>ens33</code> 中找到 <code>inet</code> 后面的即为我们的ip地址</li></ul></li></ul><h2 id="vim编辑器" tabindex="-1"><a class="header-anchor" href="#vim编辑器" aria-hidden="true">#</a> vim编辑器</h2><h3 id="一般模式" tabindex="-1"><a class="header-anchor" href="#一般模式" aria-hidden="true">#</a> 一般模式</h3><blockquote><p>默认模式,在这个模式中， 你可以使用『上下左右』按键来移动光标，你可以使用『删除字符』或『删除整行』来处理档案内容， 也可以使用『复制、贴上』来处理你的文件数据。</p></blockquote><table><thead><tr><th style="text-align:center;">按键</th><th style="text-align:center;">功能</th></tr></thead><tbody><tr><td style="text-align:center;">gg</td><td style="text-align:center;">到文件第一行行首</td></tr><tr><td style="text-align:center;">G(大写)</td><td style="text-align:center;">到文件最后一行行首，G必须为大写</td></tr><tr><td style="text-align:center;">mG或mgg</td><td style="text-align:center;">到指定行，m为目标行数</td></tr><tr><td style="text-align:center;">0(数字)</td><td style="text-align:center;">光标移到到行首（第一个字符位置）</td></tr><tr><td style="text-align:center;">$</td><td style="text-align:center;">光标移到到行尾</td></tr><tr><td style="text-align:center;">^</td><td style="text-align:center;">光标移到到行首（第一个有效字符位置）</td></tr><tr><td style="text-align:center;">[n]yy</td><td style="text-align:center;">复制从当前行开始的 n 行</td></tr><tr><td style="text-align:center;">p</td><td style="text-align:center;">把粘贴板上的内容插入到当前行</td></tr><tr><td style="text-align:center;">yw</td><td style="text-align:center;">复制一个词</td></tr><tr><td style="text-align:center;">dw</td><td style="text-align:center;">删除一个词</td></tr><tr><td style="text-align:center;">[n]x</td><td style="text-align:center;">删除光标后 n 个字符</td></tr><tr><td style="text-align:center;">[n]X</td><td style="text-align:center;">删除光标前 n 个字符</td></tr><tr><td style="text-align:center;">D</td><td style="text-align:center;">删除光标所在开始到此行尾的字符</td></tr><tr><td style="text-align:center;">[n]dd</td><td style="text-align:center;">删除从当前行开始的 n 行（准确来讲，是剪切，剪切不粘贴即为删除）</td></tr><tr><td style="text-align:center;">.(点)</td><td style="text-align:center;">执行上一次操作</td></tr><tr><td style="text-align:center;">u</td><td style="text-align:center;">撤销前一个命令</td></tr><tr><td style="text-align:center;">ctrl+r</td><td style="text-align:center;">反撤销</td></tr><tr><td style="text-align:center;">shift+g</td><td style="text-align:center;">移动到页尾</td></tr><tr><td style="text-align:center;">数字+shift+g</td><td style="text-align:center;">移动到目标行</td></tr></tbody></table><h3 id="编辑模式" tabindex="-1"><a class="header-anchor" href="#编辑模式" aria-hidden="true">#</a> 编辑模式</h3><blockquote><p>在一般模式中可以进行删除、复制、贴上等等的动作，但是却无法编辑文件内容的！要等到你按下『i, I, o, O, a, A, r, R』等任何一个字母之后才会进入编辑模式。注意了！通常在 Linux 中，按下这些按键时，在画面的左下方会出现『INSERT 或 REPLACE 』的字样，此时才可以进行编辑。而如果要回到一般模式时， 则必须要按下『Esc』这个按键即可退出编辑模式。</p></blockquote><table><thead><tr><th style="text-align:center;">按键</th><th style="text-align:center;">功能</th></tr></thead><tbody><tr><td style="text-align:center;">i</td><td style="text-align:center;">光标位置当前处插入文字</td></tr><tr><td style="text-align:center;">I</td><td style="text-align:center;">光标所在行首插入文字</td></tr><tr><td style="text-align:center;">o(字母)</td><td style="text-align:center;">光标下一行插入文字（新行）</td></tr><tr><td style="text-align:center;">O(字母)</td><td style="text-align:center;">光标上一行插入文字（新行）</td></tr><tr><td style="text-align:center;">a</td><td style="text-align:center;">光标位置右边插入文字</td></tr><tr><td style="text-align:center;">A</td><td style="text-align:center;">光标所在行尾插入文字</td></tr><tr><td style="text-align:center;">s</td><td style="text-align:center;">删除光标后边的字符，从光标当前位置插入</td></tr><tr><td style="text-align:center;">S</td><td style="text-align:center;">删除光标所在当前行，从行首插入</td></tr></tbody></table><h3 id="命令模式" tabindex="-1"><a class="header-anchor" href="#命令模式" aria-hidden="true">#</a> 命令模式</h3><blockquote><p>可以进行存盘、退出、显示行号、搜索、批量替换等操作。要在一般模式下输入&quot; / &quot;或 <strong>&quot; : &quot;</strong> 或者&quot;?&quot;可进入命令模式,当命令执行前按esc或者命令执行完毕,自动回到一般模式</p></blockquote><table><thead><tr><th style="text-align:center;">按键</th><th style="text-align:center;">功能</th></tr></thead><tbody><tr><td style="text-align:center;">:w</td><td style="text-align:center;">保存</td></tr><tr><td style="text-align:center;">:q</td><td style="text-align:center;">退出，如果文件修改但没有保存，会提示无法退出</td></tr><tr><td style="text-align:center;">:!</td><td style="text-align:center;">强制执行</td></tr><tr><td style="text-align:center;">:wq</td><td style="text-align:center;">保存退出</td></tr><tr><td style="text-align:center;">:x(小写)</td><td style="text-align:center;">保存退出</td></tr><tr><td style="text-align:center;">:w filename</td><td style="text-align:center;">保存到指定文件</td></tr><tr><td style="text-align:center;">:q!</td><td style="text-align:center;">强制退出，不保存</td></tr><tr><td style="text-align:center;">:%s/abc/123/g</td><td style="text-align:center;">当前文件的所有abc替换为123<br> /g替换匹配到的所有内容</td></tr><tr><td style="text-align:center;">:%s/abc/123/gc</td><td style="text-align:center;">同上，但是每次替换需要用户确认</td></tr><tr><td style="text-align:center;">/字符串</td><td style="text-align:center;">从当前光标位置向下查找（n，N查找内容切换）</td></tr><tr><td style="text-align:center;">?字符串</td><td style="text-align:center;">从当前光标位置向上查找（n，N查找内容切换）</td></tr><tr><td style="text-align:center;">:noh</td><td style="text-align:center;">取消高亮显示</td></tr><tr><td style="text-align:center;">:set nu</td><td style="text-align:center;">显示行号</td></tr><tr><td style="text-align:center;">:set nonu</td><td style="text-align:center;">关闭行号</td></tr></tbody></table><div class="custom-container warning"><p class="custom-container-title">注意</p><p>如果非正常退出,如使用ctrl+z退出,再次编辑会提示交换文件<code>.***.swp</code>存在,并给出相应的处理方式选项,如果不删除交换文件,每次编辑都会提示,这时可以删除交换文件,通过命令: <code>rm -f .***.swp </code>即可, 注意文件是以点(.)开头的隐藏文件，删除时应注意</p></div><h2 id="虚拟机网络配置" tabindex="-1"><a class="header-anchor" href="#虚拟机网络配置" aria-hidden="true">#</a> 虚拟机网络配置</h2><div class="custom-container tip"><p class="custom-container-title">问题</p><p>在这里记录一个问题，如果我们的虚拟机之前已经配置好了一个静态的IP并且可以访问，但是隔了一段时间发现在ping 某个网址的时候发现不可以，可以尝试把我们的VMnet8的设置还原为默认设置(也就是下面第一张图里面的内容)，然后看给我们分配的Ip地址是多少以及对应的GateWay(网关)，然后再我们的配置文件中去进行修改，按照下面的方式修改即可</p></div><h3 id="静态ip" tabindex="-1"><a class="header-anchor" href="#静态ip" aria-hidden="true">#</a> 静态IP</h3><ul><li>在VMware软件点击编辑-&gt;虚拟网络编辑器-&gt;右下角的更改设置(管理员身份)-&gt;VNnet8(NAT模式)<br><img src="https://cdn.jsdelivr.net/gh/wxhcoding/myblog-img/linux/linux-20230830184650.png" alt="linux-20230830184650"></li><li>我们记住我们的子网IP，后面需要用到，再点击NAT设置，查看我们的网关IP <code>192.168.206.2</code> 后面配置都需要用到</li><li>下面开始进行修改<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/sysconfig/network-scripts/ifcfg-ens33
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>按 <code>i</code> 进入编辑模式，修改完之后，按 <code>ESC</code> 退出编辑模式，输入 <code>:wq</code> 保存并退出</li><li>显示的内容为<div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code>TYPE<span class="token operator">=</span><span class="token string">&quot;Ethernet&quot;</span> #网络类型（通常是Ethemet，工业以太网）
PROXY_METHOD<span class="token operator">=</span><span class="token string">&quot;none&quot;</span>
BROWSER_ONLY<span class="token operator">=</span><span class="token string">&quot;no&quot;</span>
BOOTPROTO<span class="token operator">=</span><span class="token string">&quot;dhcp&quot;</span>  #dhcp 为动态IP
DEFROUTE<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV4_FAILURE_FATAL<span class="token operator">=</span><span class="token string">&quot;no&quot;</span>
IPV6INIT<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV6_AUTOCONF<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV6_DEFROUTE<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV6_FAILURE_FATAL<span class="token operator">=</span><span class="token string">&quot;no&quot;</span>
IPV6_ADDR_GEN_MODE<span class="token operator">=</span><span class="token string">&quot;stable-privacy&quot;</span>
NAME<span class="token operator">=</span><span class="token string">&quot;ens33&quot;</span>
UUID<span class="token operator">=</span><span class="token string">&quot;e8582df9-96c3-4ddc-9fc6-19282dd5e019&quot;</span>
DEVICE<span class="token operator">=</span><span class="token string">&quot;ens33&quot;</span>
ONBOOT<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span> #系统启动的时候网络接口是否有效（yes<span class="token operator">/</span>no）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>修改下面的内容<div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code>BOOTPROTO<span class="token operator">=</span><span class="token string">&quot;static&quot;</span> #静态网址 <span class="token punctuation">(</span>已有<span class="token operator">-</span>改为静态<span class="token punctuation">)</span>
ONBOOT<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span> #开机启用 <span class="token punctuation">(</span>已有<span class="token punctuation">)</span>
IPADDR<span class="token operator">=</span><span class="token number">192.168</span><span class="token operator">.</span><span class="token number">206.100</span> #IP地址 <span class="token punctuation">(</span>上图中的子网IP，前三段必须一致，最后一个自己定义<span class="token punctuation">)</span>
GATEWAY<span class="token operator">=</span><span class="token number">192.168</span><span class="token operator">.</span><span class="token number">206.2</span> #网关<span class="token punctuation">(</span>查看的自己的网关IP<span class="token punctuation">)</span>
DNS1<span class="token operator">=</span><span class="token number">192.168</span><span class="token operator">.</span><span class="token number">206.2</span> #DNS域名解析<span class="token punctuation">(</span>增加<span class="token punctuation">)</span> <span class="token number">114.114</span><span class="token operator">.</span><span class="token number">114.114</span><span class="token punctuation">[</span>推荐<span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">8.8</span><span class="token operator">.</span><span class="token number">8.8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>更改后的内容为<div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code>TYPE<span class="token operator">=</span><span class="token string">&quot;Ethernet&quot;</span>
PROXY_METHOD<span class="token operator">=</span><span class="token string">&quot;none&quot;</span>
BROWSER_ONLY<span class="token operator">=</span><span class="token string">&quot;no&quot;</span>
BOOTPROTO<span class="token operator">=</span><span class="token string">&quot;static&quot;</span>
DEFROUTE<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV4_FAILURE_FATAL<span class="token operator">=</span><span class="token string">&quot;no&quot;</span>
IPV6INIT<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV6_AUTOCONF<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV6_DEFROUTE<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPV6_FAILURE_FATAL<span class="token operator">=</span><span class="token string">&quot;no&quot;</span>
IPV6_ADDR_GEN_MODE<span class="token operator">=</span><span class="token string">&quot;stable-privacy&quot;</span>
NAME<span class="token operator">=</span><span class="token string">&quot;ens33&quot;</span>
UUID<span class="token operator">=</span><span class="token string">&quot;2862a505-0766-4945-8c3f-ba82285b9319&quot;</span>
DEVICE<span class="token operator">=</span><span class="token string">&quot;ens33&quot;</span>
ONBOOT<span class="token operator">=</span><span class="token string">&quot;yes&quot;</span>
IPADDR<span class="token operator">=</span><span class="token number">192.168</span><span class="token operator">.</span><span class="token number">206.100</span>
GATEWAY<span class="token operator">=</span><span class="token number">192.168</span><span class="token operator">.</span><span class="token number">206.2</span>
DNS1<span class="token operator">=</span><span class="token number">114.114</span><span class="token operator">.</span><span class="token number">114.114</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li>重启网络服务<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果报错重启虚拟机</li></ul></li><li>可以关闭NetWorkManager服务，否则后面一开机可能有影响<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看服务</span>
systemctl status NetworkManager.service
<span class="token comment"># 停止服务 </span>
systemctl stop NetworkManager
<span class="token comment"># 查看自启动 </span>
systemctl is-enabled NetworkManager
<span class="token comment"># 关闭自启动</span>
systemctl disable NetworkManager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="查看和修改主机名" tabindex="-1"><a class="header-anchor" href="#查看和修改主机名" aria-hidden="true">#</a> 查看和修改主机名</h3><ul><li>查看<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">hostname</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>修改<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/hostname
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>把原来的主机名删除 输入自己的命名的主机名</li></ul></li><li>修改主机名和IP地址的映射关系<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/hosts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-vim line-numbers-mode" data-ext="vim"><pre class="language-vim"><code><span class="token number">127.0</span><span class="token operator">.</span><span class="token number">0.1</span>   localhost localhost<span class="token operator">.</span>localdomain localhost4 localhost4<span class="token operator">.</span>localdomain4
<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">1</span>         localhost localhost<span class="token operator">.</span>localdomain localhost6 localhost6<span class="token operator">.</span>localdomain6
# 我们根据上面修改的静态IP 新增下面这个映射
<span class="token number">192.168</span><span class="token operator">.</span><span class="token number">206.100</span> jhw
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>保存退出后重启虚拟机</li></ul><h3 id="服务管理类命令" tabindex="-1"><a class="header-anchor" href="#服务管理类命令" aria-hidden="true">#</a> 服务管理类命令</h3><ul><li>临时开关服务命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 开启服务</span>
systemctl start 服务名 
<span class="token comment"># 关闭服务</span>
systemctl stop 服务名 
<span class="token comment"># 重启服务</span>
systemctl restart 服务名 
<span class="token comment"># 查看服务</span>
systemctl status 服务名 
<span class="token comment"># 查看正在运行的服务</span>
systemctl <span class="token parameter variable">--type</span> <span class="token function">service</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>永久开关服务命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#  打开自启</span>
systemctl <span class="token builtin class-name">enable</span> 服务名         
<span class="token comment"># 关闭自启</span>
systemctl disable 服务名        
<span class="token comment"># 查看服务是否自启</span>
systemctl is-enabled 服务名    
<span class="token comment"># 查看所有服务自启配置</span>
systemctl list-unit-files     
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关闭防火墙" tabindex="-1"><a class="header-anchor" href="#关闭防火墙" aria-hidden="true">#</a> 关闭防火墙</h3><p>查看防火墙状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭防火墙自启(永久关闭)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看防火墙是否自启</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl is-enabled firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="虚拟机管理" tabindex="-1"><a class="header-anchor" href="#虚拟机管理" aria-hidden="true">#</a> 虚拟机管理</h2><h3 id="快照" tabindex="-1"><a class="header-anchor" href="#快照" aria-hidden="true">#</a> 快照</h3><p>通过快照可快速保存虚拟机当前的状态,后续可以使用快照,将虚拟机还原到某个快照的状态. 如某个软件安装失败,可以通过快照快速还原回指定的某个状态</p><p>选中虚拟机，右键快照 拍摄快照即可，后面可以快速还原到某个状态 也可对快照进行管理</p><h3 id="克隆" tabindex="-1"><a class="header-anchor" href="#克隆" aria-hidden="true">#</a> 克隆</h3><ul><li>首先需要关闭虚拟机</li><li>右键管理-&gt;克隆</li><li>选择当前的状态进行完整克隆</li><li>修改存放位置 等待完成即可</li></ul><h2 id="常见linux命令" tabindex="-1"><a class="header-anchor" href="#常见linux命令" aria-hidden="true">#</a> 常见Linux命令</h2><h3 id="文件目录类命令" tabindex="-1"><a class="header-anchor" href="#文件目录类命令" aria-hidden="true">#</a> 文件目录类命令</h3><h4 id="显示当前工作目录的绝对路径-pwd" tabindex="-1"><a class="header-anchor" href="#显示当前工作目录的绝对路径-pwd" aria-hidden="true">#</a> 显示当前工作目录的绝对路径(pwd)</h4><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">pwd</span></span></span>
<span class="token output">/root
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="列出目录内容-ls" tabindex="-1"><a class="header-anchor" href="#列出目录内容-ls" aria-hidden="true">#</a> 列出目录内容(ls)</h4><ul><li>ls [选项] [目录或是文件]</li><li>每行列出的信息依次是： 文件类型与权限 链接数 文件属主 文件属组 文件大小用byte来表示 建立或最近修改的时间 名字</li></ul><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-a</td><td>全部的文件，连同隐藏档( 开头为 . 的文件) 一起列出来(常用)</td></tr><tr><td>-l</td><td>长数据串列出，包含文件的属性与权限等等数据(常用 简写 <code>ll</code> )</td></tr></tbody></table><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="切换路径-cd" tabindex="-1"><a class="header-anchor" href="#切换路径-cd" aria-hidden="true">#</a> 切换路径(cd)</h4><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>cd 绝对路径</td><td><strong>切换路径</strong></td></tr><tr><td>cd相对路径</td><td><strong>切换路径</strong></td></tr><tr><td>cd ~或者cd</td><td>回到自己的家目录</td></tr><tr><td>cd -</td><td>回到上一次所在目录</td></tr><tr><td>cd ..</td><td>回到当前目录的上一级目录</td></tr><tr><td>cd -P</td><td>跳转到实际物理路径，而非快捷方式路径</td></tr><tr><td>cd /</td><td>回到系统根目录</td></tr></tbody></table><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span> /usr/local</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw local]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">pwd</span></span></span>
<span class="token output">/usr/local
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw local]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">pwd</span></span></span>
<span class="token output">/root
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="建立目录-mkdir" tabindex="-1"><a class="header-anchor" href="#建立目录-mkdir" aria-hidden="true">#</a> 建立目录(mkdir)</h4><ul><li>mkdir [选项] 要创建的目录</li></ul><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-p</td><td>创建多层目录</td></tr></tbody></table><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">mkdir</span> test/test2</span></span>
<span class="token output">mkdir: 无法创建目录&quot;test/test2&quot;: 没有那个文件或目录
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">mkdir</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
drwxr-xr-x. 2 root root    6 8月  30 20:03 test
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> test/test2</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 0
drwxr-xr-x. 2 root root 6 8月  30 20:04 test2
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除目录-rmdir" tabindex="-1"><a class="header-anchor" href="#删除目录-rmdir" aria-hidden="true">#</a> 删除目录(rmdir)</h4><ul><li>只能单层删除 如果目录下有文件夹删除错误</li></ul><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">rmdir</span> <span class="token builtin class-name">test</span></span></span>
<span class="token output">rmdir: 删除 &quot;test&quot; 失败: 目录非空
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">rmdir</span> test/test2</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 0
</span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建空文件-touch" tabindex="-1"><a class="header-anchor" href="#创建空文件-touch" aria-hidden="true">#</a> 创建空文件(touch)</h4><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">touch</span> test/test.txt</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 0
-rw-r--r--. 1 root root 0 8月  30 20:09 test.txt
</span></code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意事项</li><li>vim也可以创建文件,<code>vim test.txt</code> 进入编辑模式,然后输入内容保存退出即可,但是如果不输出内容直接空文件下退出,则不会创建文件</li></ul><h4 id="复制文件或目录-cp" tabindex="-1"><a class="header-anchor" href="#复制文件或目录-cp" aria-hidden="true">#</a> 复制文件或目录(cp)</h4><ul><li>cp [选项] source dest</li></ul><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归复制整个文件夹</td></tr><tr><td>source</td><td>源文件</td></tr><tr><td>dest</td><td>目标文件</td></tr></tbody></table><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">cp</span> test/test.txt /root</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
drwxr-xr-x. 2 root root   22 8月  30 20:09 test
-rw-r--r--. 1 root root    0 8月  30 20:13 test.txt
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="移除文件或者目录-rm" tabindex="-1"><a class="header-anchor" href="#移除文件或者目录-rm" aria-hidden="true">#</a> 移除文件或者目录(rm)</h4><ul><li>rm [选项] deleteFile</li></ul><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归删除目录所有内容</td></tr><tr><td>-f</td><td>强制删除,不提示用户进行确认</td></tr><tr><td>-v</td><td>显示指令的详细执行过程</td></tr></tbody></table><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 0
-rw-r--r--. 1 root root 0 8月  30 20:09 test.txt
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">rm</span> <span class="token builtin class-name">test</span></span></span>
<span class="token output">rm: 无法删除&quot;test&quot;: 是一个目录
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
-rw-r--r--. 1 root root    0 8月  30 20:13 test.txt
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="移动文件与目录或重命名-mv" tabindex="-1"><a class="header-anchor" href="#移动文件与目录或重命名-mv" aria-hidden="true">#</a> 移动文件与目录或重命名(mv)</h4><ul><li>重命名 <ul><li>mv 旧文件名 新文件名</li></ul></li><li>移动 <ul><li>mv 旧文件所在位置 新文件所在位置</li></ul></li></ul><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
-rw-r--r--. 1 root root    0 8月  30 20:13 test.txt
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">mv</span> test.txt test2.txt</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
-rw-r--r--. 1 root root    0 8月  30 20:13 test2.txt
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">mkdir</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">mv</span> test2.txt test/</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span></span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 0
-rw-r--r--. 1 root root 0 8月  30 20:13 test2.txt
</span></code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看文件内容-cat" tabindex="-1"><a class="header-anchor" href="#查看文件内容-cat" aria-hidden="true">#</a> 查看文件内容(cat)</h4><ul><li>cat [选项] 文件 查看文件内容,从第一行开始显示</li><li>一般查看比较小的文件,一屏幕能显示全的</li></ul><table><thead><tr><th>选项</th><th>功能描述</th></tr></thead><tbody><tr><td>- n</td><td>显示所有行的行号,包括空行</td></tr></tbody></table><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">vim</span> test2.txt</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">cat</span> <span class="token parameter variable">-n</span> test2.txt</span></span>
<span class="token output">     1  a
     2  a
     3  a
     4  a
     5  a
     6  a
     7  a
     8  a
     9  a
    10  a
</span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文件分屏查看器-more" tabindex="-1"><a class="header-anchor" href="#文件分屏查看器-more" aria-hidden="true">#</a> 文件分屏查看器(more)</h4><ul><li>more 要查看的文件</li></ul><table><thead><tr><th>操作</th><th>功能说明</th></tr></thead><tbody><tr><td>空白键 (space)</td><td>代表向下翻一页；</td></tr><tr><td>Enter</td><td>代表向下翻『一行』；</td></tr><tr><td>q</td><td>代表立刻离开 more ，不再显示该文件内容。</td></tr><tr><td>Ctrl+F</td><td>向下滚动一屏</td></tr><tr><td>Ctrl+B</td><td>返回上一屏</td></tr><tr><td>=</td><td>输出当前行的行号</td></tr><tr><td>:f</td><td>输出文件名和当前行的行号</td></tr></tbody></table><h4 id="分屏显示文件内容-less" tabindex="-1"><a class="header-anchor" href="#分屏显示文件内容-less" aria-hidden="true">#</a> 分屏显示文件内容(less)</h4><ul><li>less 要查看的文件</li><li>less指令用来分屏查看文件内容，它的功能与more指令类似，但是比more指令更加强大，支持各种显示终端。less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。</li></ul><table><thead><tr><th>操作</th><th>功能说明</th></tr></thead><tbody><tr><td>空白键</td><td>向下翻动一页；</td></tr><tr><td>[pagedown]</td><td>向下翻动一页</td></tr><tr><td>[pageup]</td><td>向上翻动一页；</td></tr><tr><td>/字串</td><td>向下搜寻『字串』的功能；n：向下查找；N：向上查找；</td></tr><tr><td>?字串</td><td>向上搜寻『字串』的功能；n：向上查找；N：向下查找；</td></tr><tr><td>q</td><td>离开 less 这个程序；</td></tr></tbody></table><h4 id="显示文件头部内容-head" tabindex="-1"><a class="header-anchor" href="#显示文件头部内容-head" aria-hidden="true">#</a> 显示文件头部内容(head)</h4><ul><li>head 文件 （功能描述：查看文件头10行内容）</li><li>head -n 5(行数) 文件 （功能描述：查看文件头5行内容，5可以是任意行数）</li></ul><h4 id="输出文件尾部内容-tail" tabindex="-1"><a class="header-anchor" href="#输出文件尾部内容-tail" aria-hidden="true">#</a> 输出文件尾部内容(tail)</h4><ul><li>tail用于输出文件中尾部的内容，默认情况下tail指令显示文件的后10行内容。</li><li>tail 文件 （功能描述：查看文件后10行内容）</li><li>tail -n 5(行数) 文件 （功能描述：查看文件后5行内容，5可以是任意行数）</li><li>tail -f 文件 （功能描述：实时追踪该文档的所有更新）</li></ul><h4 id="打印信息-echo" tabindex="-1"><a class="header-anchor" href="#打印信息-echo" aria-hidden="true">#</a> 打印信息(echo)</h4><ul><li>echo [选项] [输出内容]</li><li>echo输出内容到控制台 相当于 System.out.println();</li></ul><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-e</td><td>支持反斜线控制的字符转换</td></tr><tr><td>\\\\</td><td>输出\\本身</td></tr><tr><td>\\n</td><td>换行符</td></tr><tr><td>\\t</td><td>制表符，也就是Tab键</td></tr></tbody></table><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello<span class="token entity" title="\\t">\\t</span>linux&quot;</span></span></span>
<span class="token output">hello\\tlinux
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;hello<span class="token entity" title="\\t">\\t</span>linux&quot;</span></span></span>
<span class="token output">hello   linux
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;hello<span class="token entity" title="\\n">\\n</span>linux&quot;</span></span></span>
<span class="token output">hello
linux
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="覆盖-和追加" tabindex="-1"><a class="header-anchor" href="#覆盖-和追加" aria-hidden="true">#</a> 覆盖(&gt;)和追加(&gt;&gt;)</h4><ul><li>ll &gt;文件 （功能描述：列表的内容写入文件a.txt中（<strong>覆盖写</strong>））</li><li>ll &gt;&gt;文件 （功能描述：列表的内容<strong>追加</strong>到文件aa.txt的末尾）</li><li>cat 文件1 &gt; 文件2 （功能描述：将文件1的内容覆盖到文件2）</li><li>echo “内容” &gt;&gt; 文件</li></ul><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll <span class="token operator">&gt;&gt;</span> test2.txt</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">cat</span> <span class="token parameter variable">-n</span> test2.txt</span></span>
<span class="token output">     1  a
     2  a
     3  a
     4  a
     5  a
     6  a
     7  a
     8  a
     9  a
    10  a
    11  总用量 4
    12  -rw-r--r--. 1 root root 20 8月  30 20:32 test2.txt
</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll <span class="token operator">&gt;</span> test2.txt</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">cat</span> <span class="token parameter variable">-n</span> test2.txt</span></span>
<span class="token output">     1  总用量 0
     2  -rw-r--r--. 1 root root 0 8月  30 20:50 test2.txt
</span></code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建链接和软连接-ln" tabindex="-1"><a class="header-anchor" href="#创建链接和软连接-ln" aria-hidden="true">#</a> 创建链接和软连接(ln)</h4><ul><li>软链接也称为符号链接，类似于windows里的快捷方式，有自己的数据块，主要存放了链接其他文件的路径。</li><li>ln [-s] [原文件或目录] [链接名] （功能描述：给原文件创建一个链接）[-s]创建一个软连接</li><li>删除软链接： rm -rf 软链接名，而不是rm -rf 软链接名/</li><li>查询：通过ll就可以查看，列表属性第1位是l，尾部会有位置指向。</li><li>软链接创建的如果是文件，可以直接使用 vim 软链接 进行编辑 或者 cat 之类的命令进行查看</li><li>如果创建的是目录的软链接 使用 cd -P 软链接 进入对应的目录</li></ul><div class="language-sh-session line-numbers-mode" data-ext="sh-session"><pre class="language-sh-session"><code><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> test/test2.txt testlink</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
drwxr-xr-x. 2 root root   23 8月  30 20:32 test
lrwxrwxrwx. 1 root root   14 8月  30 21:00 testlink -&gt; test/test2.txt

</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">vim</span> testlink</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">cat</span> <span class="token parameter variable">-n</span> testlink</span></span>
<span class="token output">     1  总用量 0
     2  -rw-r--r--. 1 root root 0 8月  30 20:50 test2.txt

</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> test/test2 testlink2</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
drwxr-xr-x. 3 root root   36 8月  30 21:07 test
lrwxrwxrwx. 1 root root   14 8月  30 21:00 testlink -&gt; test/test2.txt
lrwxrwxrwx. 1 root root   10 8月  30 21:08 testlink2 -&gt; test/test2

</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">cd</span> <span class="token parameter variable">-P</span> testlink2</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw test2]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token builtin class-name">pwd</span></span></span>
<span class="token output">/root/test/test2

</span><span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> testlink</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> testlink2</span></span>
<span class="token command"><span class="token info punctuation"><span class="token user">[root@jhw ~]</span></span><span class="token shell-symbol important">#</span> <span class="token bash language-bash">ll</span></span>
<span class="token output">总用量 12
-rw-------. 1 root root 1533 8月  30 08:41 anaconda-ks.cfg
-rw-------. 1 root root 1630 8月  30 14:34 anaconda-ks.cfg.bak
-rw-r--r--. 1 root root 1581 8月  30 08:43 initial-setup-ks.cfg
</span></code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看历史命令-history" tabindex="-1"><a class="header-anchor" href="#查看历史命令-history" aria-hidden="true">#</a> 查看历史命令(history)</h4><ul><li>history （功能描述：查看已经执行过历史命令）</li><li><code>/root/.bash_history</code>文件中也是历史命令<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">less</span> /root/.bash_history
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="用户管理命令" tabindex="-1"><a class="header-anchor" href="#用户管理命令" aria-hidden="true">#</a> 用户管理命令</h3><h4 id="添加新用户-useradd" tabindex="-1"><a class="header-anchor" href="#添加新用户-useradd" aria-hidden="true">#</a> 添加新用户(useradd)</h4><ul><li>useradd 用户名 （功能描述：添加新用户）</li><li>​useradd -g 组名 用户名 （功能描述：添加新用户到某个组）</li></ul><h4 id="设置用户密码-passwd" tabindex="-1"><a class="header-anchor" href="#设置用户密码-passwd" aria-hidden="true">#</a> 设置用户密码(passwd)</h4><ul><li>passwd 用户名 （功能描述：设置用户密码）</li></ul><h4 id="查看用户是否存在-id" tabindex="-1"><a class="header-anchor" href="#查看用户是否存在-id" aria-hidden="true">#</a> 查看用户是否存在(id)</h4><ul><li>id 用户名</li></ul><h4 id="查看创建的所有用户-cat-etc-passwd" tabindex="-1"><a class="header-anchor" href="#查看创建的所有用户-cat-etc-passwd" aria-hidden="true">#</a> 查看创建的所有用户(cat /etc/passwd)</h4><ul><li>cat /etc/passwd</li></ul><h4 id="切换用户-su" tabindex="-1"><a class="header-anchor" href="#切换用户-su" aria-hidden="true">#</a> 切换用户(su)</h4><ul><li>su 用户名称 （功能描述：切换用户，只能获得用户的执行权限，不能获得环境变量）</li><li>su - 用户名称 （功能描述：切换到用户并获得该用户的环境变量及执行权限）</li><li>exit (功能描述：回退到上一个用户 只能切换上一次的用户，多次的不可以)</li></ul><h4 id="删除用户-userdel" tabindex="-1"><a class="header-anchor" href="#删除用户-userdel" aria-hidden="true">#</a> 删除用户(userdel)</h4><ul><li>userdel 用户名 （功能描述：删除用户但保存用户主目录）</li><li>userdel -r 用户名 （功能描述：用户和用户主目录，都删除）</li></ul><h4 id="查看登录用户信息-who" tabindex="-1"><a class="header-anchor" href="#查看登录用户信息-who" aria-hidden="true">#</a> 查看登录用户信息(who)</h4><ul><li>whoami （功能描述：显示自身用户名称）</li><li>who am i （功能描述：显示登录用户的用户名）</li></ul><h4 id="设置普通用户具有root权限-sudo" tabindex="-1"><a class="header-anchor" href="#设置普通用户具有root权限-sudo" aria-hidden="true">#</a> 设置普通用户具有root权限(sudo)</h4><ul><li>sudo 命令</li></ul><h4 id="修改用户-usermod" tabindex="-1"><a class="header-anchor" href="#修改用户-usermod" aria-hidden="true">#</a> 修改用户(usermod)</h4><ul><li>usermod -g 用户组 用户名</li></ul><h3 id="组管理类命令" tabindex="-1"><a class="header-anchor" href="#组管理类命令" aria-hidden="true">#</a> 组管理类命令</h3><h4 id="新增组-groupadd" tabindex="-1"><a class="header-anchor" href="#新增组-groupadd" aria-hidden="true">#</a> 新增组(groupadd)</h4><ul><li>groupadd 组名</li></ul><h4 id="删除组-groupdel" tabindex="-1"><a class="header-anchor" href="#删除组-groupdel" aria-hidden="true">#</a> 删除组(groupdel)</h4><ul><li>groupdel 组名</li></ul><h4 id="查看创建了那些组-cat-etc-group" tabindex="-1"><a class="header-anchor" href="#查看创建了那些组-cat-etc-group" aria-hidden="true">#</a> 查看创建了那些组(cat /etc/group)</h4><ul><li>cat /etc/group</li></ul><h3 id="文件权限类命令" tabindex="-1"><a class="header-anchor" href="#文件权限类命令" aria-hidden="true">#</a> 文件权限类命令</h3><h4 id="文件属性信息解读" tabindex="-1"><a class="header-anchor" href="#文件属性信息解读" aria-hidden="true">#</a> 文件属性信息解读</h4><ul><li><p>0首位表示类型 在Linux中第一个字符代表这个文件是目录、文件或链接文件等等</p><table><thead><tr><th>符号</th><th>对应文件类型</th></tr></thead><tbody><tr><td>-</td><td>代表文件</td></tr><tr><td>d</td><td>d 代表目录</td></tr><tr><td>l</td><td>链接文档(link file)；</td></tr></tbody></table></li><li><p>第1-3位确定属主（该文件的所有者）拥有该文件的权限 U →User</p></li><li><p>第4-6位确定属组（所有者的同组用户）拥有该文件的权限 G →Group</p></li><li><p>第7-9位确定其他用户拥有该文件的权限 O →Other</p></li><li><p>rwx作用到目录和文件的不同含义</p><ul><li>作用到文件<div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>[ r ]代表可读(read): 可以读取，查看
​[ w ]代表可写(write): 可以修改，但是不能删除该文件，对该文件所在的目录有写权限，才能删除.
​[ x ]代表可执行(execute):可以被系统执行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>作用到目录<div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>[ r ]代表可读(read): 可以读取，ls查看目录内容
​[ w ]代表可写(write): 可以修改，目录内创建+删除+重命名目录
[ x ]代表可执行(execute):可以进入该目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>文件属性介绍</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 前面第一部分为文件的类型和权限 1代表文件硬链接数</span>
<span class="token comment"># 第一个root 文件所属主</span>
<span class="token comment"># 第二个root 文件所属组</span>
<span class="token comment"># 89 为文件大小 单位 字节</span>
<span class="token comment"># 后面 文件修改时间</span>
<span class="token comment"># 文件名</span>
-rw-r--r--. <span class="token number">1</span> root root <span class="token number">106547</span> <span class="token number">9</span>月   <span class="token number">1</span> <span class="token number">18</span>:03 redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果查看到是<strong>文件</strong>：链接数指的是<strong>硬链接</strong>个数</li><li>如果查看的是<strong>文件夹</strong>：链接数指的是<strong>子文件夹</strong>个数</li></ul></li><li><p>改变文件权限(chmod)</p><ul><li>第一种: chmod [{ugoa}{+-=}{rwx}] 文件或目录</li><li>第二种: chmod [mode=421 ] [文件或目录]</li><li>u:所有者 g:所有组 o:其他人 a:所有人(u、g、o的总和)</li><li>​r=4 w=2 x=1</li><li>rwx=4+2+1=7</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 例如使用第一种修改</span>
<span class="token function">chmod</span> u+x test.txt

<span class="token comment"># 第二种</span>
<span class="token function">chmod</span> <span class="token number">777</span> test.txt

<span class="token comment"># 如果是文件夹 需要添加 -R</span>
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> test/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>改变所有者(chown)</p><ul><li>chown [选项] [最终用户] [文件或目录] （功能描述：改变文件或者目录的所有者）</li><li>若是文件夹 需要添加 -R</li></ul></li><li><p>改变所属组(chgrp)</p><ul><li>chgrp [最终用户组] [文件或目录] （功能描述：改变文件或者目录的所属组）</li><li>若是文件夹 需要添加 -R</li></ul></li></ul><h3 id="搜索查找命令" tabindex="-1"><a class="header-anchor" href="#搜索查找命令" aria-hidden="true">#</a> 搜索查找命令</h3><ul><li><p>查找文件或者目录(find)</p><ul><li>find指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件显示在终端。</li><li>find [搜索范围] [选项] 范围即指定某个目录</li></ul><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-name&lt;查询方式&gt;</td><td>按照指定的文件名查找模式查找文件</td></tr><tr><td>-user&lt;用户名&gt;</td><td>查找属于指定用户名所有文件</td></tr><tr><td>-size&lt;文件大小&gt;</td><td>按照指定的文件大小查找文件<br>（+n 大于 -n小于 n等于）</td></tr></tbody></table></li><li><p>过滤查找(grep)</p><ul><li>管道符 “|” 表示将前一个命令的处理结果输出传递给后面的命令处理</li><li>grep 选项 查找内容 源文件</li><li>查找某文件在第几行 <code>ls | grep -n test</code></li><li>常用比如 <code>ps -ef | grep redis</code> 查看redis进程是否存在</li></ul></li></ul><h3 id="压缩和解压缩命令" tabindex="-1"><a class="header-anchor" href="#压缩和解压缩命令" aria-hidden="true">#</a> 压缩和解压缩命令</h3><ul><li><p>tar</p><ul><li>tar [选项] XXX.tar.gz 将要打包进去的内容 （功能描述：打包目录，压缩后的文件格式.tar.gz）</li><li>压缩 <ul><li>tar -zcvf ...</li></ul></li><li>解压 <ul><li>tar -xvf ...</li><li>到指定目录 <code>tar -xvf ... -C 指定目录</code></li></ul></li></ul><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-z</td><td>打包同时压缩</td></tr><tr><td>-c</td><td>产生.tar打包文件</td></tr><tr><td>-v</td><td>显示详细信息</td></tr><tr><td>-f</td><td>指定压缩后的文件名</td></tr><tr><td>-x</td><td>解包.tar文件</td></tr></tbody></table></li></ul><h3 id="进程线程命令" tabindex="-1"><a class="header-anchor" href="#进程线程命令" aria-hidden="true">#</a> 进程线程命令</h3><ul><li>ps (process status 进程状态)查看当前系统进程状态 <ul><li>ps -aux | grep xxx （功能描述：查看系统中所有进程）</li><li>​ps -ef | grep xxx （功能描述：可以查看子父进程之间的关系）</li></ul></li><li>终止进程(kill) <ul><li>kill [-9] 进程号 （功能描述：通过进程号杀死进程） <ul><li>-9 表示强迫进程立即停止</li></ul></li><li>killall 进程名称 （功能描述：通过进程名称杀死进程，也支持通配符）</li></ul></li></ul><h2 id="服务环境搭建" tabindex="-1"><a class="header-anchor" href="#服务环境搭建" aria-hidden="true">#</a> 服务环境搭建</h2><p>首先我们把电脑上的压缩包传到虚拟机上面的 <code>/opt/soft</code> 目录下</p><div class="custom-container tip"><p class="custom-container-title">前置命令了解</p><ul><li><p>查看是否安装了rpm安装包</p><ul><li><code>rpm -qa | grep rpm软件包</code></li></ul></li><li><p>卸载软件包</p><ul><li><code>rpm -e 软件包</code></li><li><code>rpm -e --nodeps 软件包</code> 卸载软件时，不检查依赖。</li></ul></li><li><p>yum [选项] [参数]</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-y</td><td>对所有提问都回答“yes”</td></tr></tbody></table><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>install</td><td>安装rpm软件包</td></tr><tr><td>update</td><td>更新rpm软件包</td></tr><tr><td>check-update</td><td>检查是否有可用的更新rpm软件包</td></tr><tr><td>remove</td><td>删除指定的rpm软件包</td></tr><tr><td>list</td><td>显示软件包信息</td></tr><tr><td>clean</td><td>清理yum过期的缓存</td></tr><tr><td>deplist</td><td>显示yum软件包的所有依赖关系</td></tr></tbody></table></li></ul></div><h3 id="jdk" tabindex="-1"><a class="header-anchor" href="#jdk" aria-hidden="true">#</a> JDK</h3><ol><li>查询系统自带的JDK</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span> <span class="token function">grep</span> jdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果安装的是桌面版的CentOS7,这里会默认带有JDK，并会查询出来多个，我们使用命令进行删除，把下面的多个则依次删除<br> 2. 卸载自带的JDK</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 如果有多个依次删除 名字直接使用查询到的名字</span>
<span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> jdk的rpm软件包的名字
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>解压JDK压缩包</li></ol><blockquote><p>首先我们进入到 <code>/opt/soft</code> 目录下，进行解压，并解压到 <code>/opt</code> 目录下</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 这里我们解压到 /opt 目录下 即目前目录的上一节目录下</span>
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> jdk压缩包名称 <span class="token parameter variable">-C</span> <span class="token punctuation">..</span>/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>在<code>/etc/profile.d</code>目录下创建<code>my_env.sh</code>文件(系统不建议直接修改<code>/etc/profile</code>)</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/profile.d/my_env.sh

<span class="token comment"># 进入之后 按i进入编辑模式 添加我们的环境变量 </span>
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/opt/jdk-17.0.7  
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin  
<span class="token builtin class-name">export</span> <span class="token environment constant">PATH</span> JAVA_HOME

<span class="token comment"># 按 Esc 退出编辑模式</span>

:wq
<span class="token comment"># 保存退出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>执行命令使环境变量立即生效，如果不生效就重启</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile.d/my_env.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们使用 <code>java</code> <code>javac</code> <code>java -version</code> 来测试一下我们是否安装成功</p><p>安装完成之后为我们的虚拟机创建一个快照，后面出问题可以快速恢复</p><h3 id="tomcat" tabindex="-1"><a class="header-anchor" href="#tomcat" aria-hidden="true">#</a> Tomcat</h3><p>首先进入到我们存放压缩包的目录下 <code>/opt/soft</code></p><ol><li>解压Tomcat压缩包</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 这里我们解压到 /opt 目录下 即目前目录的上一节目录下</span>
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> tomcat压缩包名称 <span class="token parameter variable">-C</span> <span class="token punctuation">..</span>/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>进入到我们解压到的位置，进入到tomcat的文件夹再进到bin目录下执行，是否可以启动成功</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 启动</span>
./startup.sh
<span class="token comment"># 停止</span>
./shutdown.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>我们把tomcat的命令添加到环境变量中</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/profile.d/my_env.sh


<span class="token comment"># 在上面的基础上添加tomcat的bin的目录</span>
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/opt/jdk-17.0.7  
<span class="token assign-left variable">TOMCAT_HOME</span><span class="token operator">=</span>/opt/apache-tomcat-10.1.10
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$TOMCAT_HOME</span>/bin
<span class="token builtin class-name">export</span> <span class="token environment constant">PATH</span> JAVA_HOME TOMCAT_HOME
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>进入到任意文件夹下，执行,并通过电脑浏览器访问 <code>虚拟机的IP地址:8080</code> 查看是否可以看到Tomcat的启动界面</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 启动
startup.sh
# 停止
shutdown.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h3><ol><li>卸载系统自带的mariaDB</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#CentOS7中默认安装了mariaDB</span>
<span class="token comment">#检查是否安装，-i 表示忽略大小写，如果显示完整的rpm的名字，则表示已安装</span>
<span class="token function">rpm</span> -qa<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-i</span> mariaDB
<span class="token comment">#卸载， --nodeps 表示排除依赖，否则如果别的软件依赖mysql，则无法删除</span>
<span class="token function">rpm</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">--nodeps</span> 上面查询到的完整的名字
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>检查必要依赖</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> -qa<span class="token operator">|</span><span class="token function">grep</span> libaio
<span class="token function">rpm</span> -qa<span class="token operator">|</span><span class="token function">grep</span> net-tools
<span class="token function">rpm</span> -qa<span class="token operator">|</span><span class="token function">grep</span> perl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>更新上面的依赖(保险起见)</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># -y 表示在过程中的提示默认为yes</span>
yum update libaio <span class="token parameter variable">-y</span>
yum update net-tools <span class="token parameter variable">-y</span>
yum update perl <span class="token parameter variable">-y</span>

<span class="token comment"># 如果上面的依赖没有 需要安装</span>
yum <span class="token function">install</span> libaio <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> net-tools <span class="token parameter variable">-y</span>
yum <span class="token function">install</span> perl <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>检查/tmp临时目录权限</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 检查tmp文件夹权限</span>
ll <span class="token parameter variable">-a</span> /

<span class="token comment"># 如果权限不是777则授权为777</span>
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> /tmp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>解压</li></ol><blockquote><p>安装之前我们在 <code>/opt</code> 目录下面新建一个文件夹 <code>/opt/mysql</code> 把解压的文件放到文件夹中</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> mysql压缩包名称 <span class="token parameter variable">-C</span> <span class="token punctuation">..</span>/mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>安装</li></ol><blockquote><p>首先进入到我们解压的文件夹内 <code>/opt/mysql</code> 直接复制下面的命令 粘贴逐行批量执行</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-common-8.0.30-1.el7.x86_64.rpm
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-client-plugins-8.0.30-1.el7.x86_64.rpm
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-libs-8.0.30-1.el7.x86_64.rpm
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-icu-data-files-8.0.30-1.el7.x86_64.rpm
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-client-8.0.30-1.el7.x86_64.rpm
<span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> mysql-community-server-8.0.30-1.el7.x86_64.rpm

<span class="token comment"># -i, --install    安装软件包</span>
<span class="token comment"># -v, --verbose    提供更多的详细信息输出</span>
<span class="token comment"># -h, --hash       软件包安装的时候列出哈希标记 (和 -v 一起使用效果更好)，展示进度条</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>查看是否安装成功</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jhw myredis<span class="token punctuation">]</span><span class="token comment"># rpm -qa|grep -i mysql</span>
mysql-community-common-8.0.30-1.el7.x86_64
mysql-community-server-8.0.30-1.el7.x86_64
mysql-community-libs-8.0.30-1.el7.x86_64
mysql-community-icu-data-files-8.0.30-1.el7.x86_64
mysql-community-client-8.0.30-1.el7.x86_64
mysql-community-client-plugins-8.0.30-1.el7.x86_64

<span class="token comment"># 查看版本号</span>
mysqladmin <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>初始化并启动</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#初始化数据目录并生成初始密码</span>
mysqld <span class="token parameter variable">--initialize</span> <span class="token parameter variable">--user</span><span class="token operator">=</span>mysql
<span class="token comment">#查看数据目录</span>
<span class="token function">ls</span> /var/lib/mysql/

<span class="token comment"># 启动</span>
systemctl start mysqld
<span class="token comment">#关闭</span>
systemctl stop mysqld
<span class="token comment">#重启</span>
systemctl restart mysqld
<span class="token comment">#查看服务状态</span>
systemctl status mysqld
<span class="token comment"># 查看进程</span>
<span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-i</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="9"><li>配置密码</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># mysql安装完成之后，在/var/log/mysqld.log文件中给root生成了一个默认密码</span>
<span class="token comment"># 通过下面的方式找到root默认密码，然后登录mysql </span>
<span class="token comment"># 输出的localhost: 后面的为默认密码</span>
<span class="token function">grep</span> <span class="token string">&#39;temporary password&#39;</span> /var/log/mysqld.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 登录</span>
mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p
<span class="token comment">-- 然后输入上面找到的默认密码</span>

<span class="token comment">-- 修改密码</span>
<span class="token keyword">ALTER</span> <span class="token keyword">USER</span> <span class="token string">&#39;root&#39;</span><span class="token variable">@&#39;localhost&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="10"><li>解决远程连接问题</li></ol><div class="custom-container warning"><p class="custom-container-title">注意</p><p>注意：在生产环境下不能为了省事将host设置为%，这样做会存在安全问题，可以设置为生产环境IP。</p></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> mysql<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> Host<span class="token punctuation">,</span><span class="token keyword">User</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到root用户的当前主机配置信息为localhost。<strong>修改Host为通配符%</strong><br> Host列指定了允许用户登录所使用的IP：</p><ul><li><code>Host=localhost</code>，表示只能通过本机客户端去访问。</li><li><code>Host=%</code> ，表示所有IP都有连接权限。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> Host <span class="token operator">=</span> <span class="token string">&#39;%&#39;</span> <span class="token keyword">WHERE</span> <span class="token keyword">User</span> <span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span> <span class="token comment">-- Host修改完成后记得执行FLUSH PRIVILEGES使配置立即生效：</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redis安装" tabindex="-1"><a class="header-anchor" href="#redis安装" aria-hidden="true">#</a> Redis安装</h3><blockquote><p>把我们下载的 <code>.tar.gz</code> 的压缩包上传到虚拟机的 <code>/opt/soft</code> 下， 后面我们把redis解压到 <code>/opt</code>目录下</p></blockquote><ol><li>首先我们需要下载最新版本的gcc编辑器<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gcc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>测试是否安装成功<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gcc <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li>进入到压缩包所在的目录<code>/opt/soft</code>，并解压<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 解压到上一级目录</span>
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> redis的压缩包名 <span class="token parameter variable">-C</span> <span class="token punctuation">..</span>/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>解压完成后进入到解压到的目录 执行编译命令(make)<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入到解压的目录下</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>
<span class="token builtin class-name">cd</span> redis-7.0.10/
<span class="token comment"># 编译</span>
<span class="token function">make</span>
<span class="token comment"># 之后继续执行</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>查看是否安装成功<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看安装目录 这个里面有redis相关的命令</span>
<span class="token builtin class-name">cd</span> /usr/local/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li>启动和停止</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 前台启动 在redis 的安装目录下 【不推荐】</span>
<span class="token comment"># 这样启动 退出就会断开连接</span>
redis-server

<span class="token comment"># 后台启动</span>
<span class="token comment"># 我们首先在 /root 目录下创建一个 myredis 文件夹 </span>
<span class="token comment"># 把 redis.conf 配置文件复制一份到这个文件夹内</span>
<span class="token builtin class-name">cd</span> /root
<span class="token function">mkdir</span> myredis
<span class="token comment"># 复制一份redis.conf文件 做一个备份 我们只对复制出来的进行修改</span>
<span class="token comment"># 安装目录下面的不修改</span>
<span class="token function">cp</span> /opt/redis-7.0.10/redis.conf /root/myredis

<span class="token comment"># 下面开始对配置文件中的内容进行修改</span>
<span class="token function">vim</span> myredis/redis.conf

<span class="token comment"># 将里面的daemonize no 改成 yes  让服务在后台启动 </span>
<span class="token comment"># 输入 /daemon 进行搜索 按i进入编辑模式修改</span>
daemonize no 

<span class="token comment"># 修改protected-mode 为no 取消保护模式</span>
protected-mode no

<span class="token comment"># 修改配置文件中的 bind 注释该配置  取消绑定仅主机登录</span>


<span class="token comment"># 启动redis时,使用我们自己修改之后的配置文件</span>
redis-server /root/myredis/redis.conf

<span class="token comment"># 查看服务启动状态</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>redis启动后 使用客户端连接redis</p><ul><li>redis-cli</li><li>redis-cli -p 6379</li></ul></li><li><p>输入 ping 输出 PONG 说明连接成功</p></li><li><p>停止服务</p><ul><li><p>redis-cli -p 6379 shutdown</p></li><li><p>redis-cli shutdown</p></li><li><p>如果在客户端内可直接输入 shutdown</p></li><li><p>再输入 exit 退出即可</p></li></ul></li></ul>`,192);function j(O,T){const a=i("ExternalLinkIcon");return r(),o("div",null,[c,p,s("ul",null,[s("li",null,[u,s("ul",null,[s("li",null,[s("a",m,[n("VMware Workstation Pro"),e(a)])]),s("li",null,[s("a",v,[n("虚拟机vmware17密钥 vmware workstation17许可证密钥"),e(a)])]),b])]),s("li",null,[h,s("ul",null,[s("li",null,[s("a",k,[n("阿里开源镜像站"),e(a)])]),s("li",null,[s("a",g,[n("清华大学开源镜像站"),e(a)])]),s("li",null,[s("a",x,[n("腾讯开源镜像站"),e(a)])])])]),y]),f,s("ul",null,[s("li",null,[s("a",w,[n("WindTerm 在GitHub的开源地址"),e(a)])]),s("li",null,[s("a",q,[n("WindTerm 发布版本下载地址"),e(a)])]),s("li",null,[s("a",_,[n("WindTerm官网功能介绍"),e(a)])])]),E])}const A=l(d,[["render",j],["__file","linux.html.vue"]]);export{A as default};
